const JWT = require("jsonwebtoken");
const user_model = require("./Models/UserModel");

// this function will be used for middleware on user routes that run to authenticate and validate the user token
// they are used to authenticate users and authorize actions
// a user must authenticate who they are before updating, viewing or deleting their profile or posting any articles.
// sign up / login routes don't need this middleware but they grant you the jwt to do all of the things listed above
const authenticate_token = async (req, res, next) => {
  const retrieved_token = req.headers.cookie.replace("auth_token=", ""); // get the bearer token from req header Authorization done in postman it's generated by jwt
  const decoded_token = JWT.verify(retrieved_token, process.env.SECRET); // verify tokens using the secret / public key
  try {
    const find_user = await user_model.findOne({
      id: decoded_token._id, // id field
      "tokens.token": retrieved_token, // string of the token in the request
    }); // find the user based on the _id which is part of payload in jwt.sign and the decoded token
    if (!find_user) {
      res.status(401).send({ error: "Please authenticate" });
    } else {
      req.user = find_user;
      next();
    }
  } catch (e) {
    res.status(401).send({ error: "Please authenticate" });
  }
};
module.exports = authenticate_token;